
Скрипты командной строки
========================


.. contents::
   :local:


ml-initdb.py
------------

Инициализирует базу данных и импортирует список жанров. Этот скрипт не
очень-то нужен, так как следующий скрипт делает всё указанное.


ml-import.py
------------

Использование::

    ml-import.py [file.inpx ...]

Инициализирует базу данных, импортирует список жанров и список файлов
INPX, перечисленных в командной строке. При повторных запусках не
переинициализирует БД и не переимпортирует жанры; так же не
переимпортирует уже проимпортированные книги, но импортирует в БД новые.


ml-search.py
------------

Использование::

    ml-search.py [-i] [-I] [-t {exact,start,substring}] ...

Программа выполняет поиск по базе данных и показывает список
результатов. В настоящее время может искать только в списке авторов.

Глобальные опции::

    -i, --ignore-case     независимо от регистра (по умолчанию: угадать)
    -I, --case-sensitive  с учётом регистра
    -t, --search-type {exact,start,substring}
        тип поиска: точный, подстрока в начале (это тип по умолчанию),
        подстрока в любом месте.

Опции ``-i/-I`` не могут использованы одновременно, поскольку означают
противоположные команды. В случае, если ни одна из них не использована,
программ угадывает зависимость от регистра: если все параметры даны в
нижнем регистре, программы выполнит поиск без учёта регистра. Если среди
параметров есть параметры в ВЕРХНЕМ или Смешанном регистре - поиск будет
с учётом регистра.

Опция ``-t/--search-type`` определяет тип поиска. Возможные значения:

* exact - поиск на точное совпадение; поиск "друг" найдёт только "друг",
  но "другой";
* start - поиск подстроки в начале поля; поиск "друг" найдёт "друг" и
  "другой", но не "подруга"; это тип по умолчанию;
* substring - поиск подстроки в любом месте; поиск "друг" найдёт "друг",
  "другой" и "подруга".

.. vim: set tw=72 :
